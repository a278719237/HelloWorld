import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.commons.codec.binary.Base64;

import com.cn.enums.Color;

public class TestMain {

	public static void main(String[] args) {
		TestMain t = new TestMain();
		int A[] = { 5, 2, 9, 4, 7, 6, 1, 3, 8 }; // 从小到大快速排序
		//插入排序
//	    for (int i = 1; i < A.length; i++) {
//	    	int j = i-1;
//	    	int get = A[i];
//	    	while(j>=0 && A[j] > get){
//	    		A[j+1] = A[j];
//	    		j--;
//	    	}
//	    	A[j+1] = get;
//		}
//	    
//	    System.out.println("快速排序结果：");
//	    for (int i = 0; i < A.length; i++){
//	    	System.out.print(A[i]+"\t");
//	    }
//	    System.out.println("\n");
		File file = new File("d://stock_price.txt");
		Map<Long,Double> map = new HashMap<Long,Double>();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		List<Long> sort = new ArrayList<Long>();
		try {
			BufferedReader reader = new BufferedReader(new FileReader(file));
			String line = reader.readLine();
			while(null != line){
				String[] strs = line.split(" ");
				String dateStr = strs[1];
				double price = Double.valueOf(strs[0]);
				Long times = sdf.parse(dateStr).getTime();
				map.put(times, price);
				sort.add(times);
				line = reader.readLine();
			}
			for (int m = 1; m < sort.size(); m++) {
				long get = sort.get(m);
				int n = m-1;
				while(n>=0 && sort.get(n) > get){
					sort.set(n+1, sort.get(n));
					n--;
				}
				sort.set(n+1, get);
			}
			System.out.println("排序后：");
			List<Double> prices = new ArrayList<Double>(); 
			for (int j = 0; j < sort.size(); j++){
				Date d = new Date(sort.get(j));
		    	System.out.println(sdf.format(d)+"\t"+map.get(sort.get(j)));
		    	prices.add(map.get(sort.get(j)));
		    }
			
			double first = prices.get(0);
			int index = 0;
			int end = 0;
			int count =1;
			for (int i = index+1; i < prices.size(); i++) {
				if(prices.get(i) > first){
					end = i;
					first = prices.get(i);
				}else{
					first = prices.get(i);
					System.out.println("第"+count+"区间：开始："+index+"结束："+end);
					index = i;
				}
			}
			System.out.println("第"+count+"区间：开始："+index+"结束："+end);
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}
	
}
